{"version":3,"sources":["App.js","components/DrawComponent.js","mapper/sprite.js","mapper/rgba-image.js","mapper/draw.js","index.js"],"names":["App","useState","drawFile","setDrawFile","event","a","target","files","file","Buffer","arrayBuffer","buffer","from","mapDrawFile","Uint8Array","type","onChange","DRAW_UNITS_TO_USER_UNITS","DrawComponent","boundingBox","minX","maxX","minY","maxY","objects","viewBoxWidth","Math","max","viewBoxHeight","viewBox","width","height","join","transform","map","path","index","Tag","tag","objectData","key","mapSprite","sprite","pixelWidth","pixelHeight","image","mask","palette","bitsPerPixel","wimpPalette","length","selectPalette","pixels","n","bgr_","first","alpha","push","FILE_HEADER","mapRgbaImage","filtered","filteredArray","filteredView","DataView","destOffset","setUint8","value","y","srcOffset","x","filterImage","q","imageData","bitDepth","colorType","compressionMethod","filterMethod","interlaceMethod","idatLength","pngArray","FILE_HEADER_SIZE","LENGTH_SIZE","pngView","offset","set","data","setUint32","setInt32","createCrcFrom","start","CRC32","buf","slice","createBytes","char","charCodeAt","ihdrStart","idatStart","iendStart","createPngImage","pako","deflate","TAG_MAP","TAG_END","TAG_MOVE","TAG_CLOSE_SUB_PATH","TAG_BEZIER","TAG_DRAW","JOIN_MAP","JOIN_MITRE","JOIN_ROUND","JOIN_BEVEL","CAP_MAP","CAP_BUTT","CAP_ROUND","CAP_SQUARE","CAP_TRIANGLE","mapPathData","elements","points","flatMap","mapColour","colour","mapPathObject","pathObject","fillColour","outlineColour","outlineWidth","pathStyle","capStart","windingRule","dash","strokeDashoffset","strokeDasharray","array","d","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","WINDING_EVEN_ODD","fillRule","mapSpriteObject","spriteObject","end","Sprite","fromUint8Array","rgbaImage","png","Base64","preserveAspectRatio","xlinkHref","mapSpriteRotatedObject","drawTransform","xDpi","yDpi","mapTransform","Draw","fileBoundingBox","header","mergeBoundingBox","other","min","mappedObjects","TYPE_PATH","TYPE_SPRITE","TYPE_SPRITE_ROTATED","myArrayBuffer","Promise","resolve","fr","FileReader","onload","result","readAsArrayBuffer","File","prototype","Blob","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f38ad637.chunk.js","sourcesContent":["import {useState} from 'react';\nimport mapDrawFile from './mapper/draw';\nimport DrawComponent from './components/DrawComponent';\n\nfunction App() {\n    const [drawFile, setDrawFile] = useState(null);\n    async function loadFile(event) {\n        const { target: { files = [] }} = event;\n        const [file,] = files;\n        if (file) {\n            try {\n                const buffer = Buffer.from(await file.arrayBuffer());\n                setDrawFile(mapDrawFile(new Uint8Array(buffer)));\n            } catch (e) {\n                setDrawFile(null);\n            }\n        } else {\n            setDrawFile(null);\n        }\n    }\n    return (\n        <div>\n            <h1>RISC OS Draw Viewer</h1>\n            <input type=\"file\" onChange={loadFile} />\n            <DrawComponent drawFile={drawFile} />\n        </div>\n    );\n}\n\nexport default App;\n","const DRAW_UNITS_TO_USER_UNITS = (1.0 / 640.0) * (4.0 / 3.0);\n\nfunction DrawComponent({drawFile}) {\n    if (!drawFile) {\n        return <div/>;\n    }\n\n    const {\n        boundingBox: {minX, maxX, minY, maxY},\n        objects\n    } = drawFile;\n\n    const viewBoxWidth = Math.max(maxX - minX, 1);\n    const viewBoxHeight = Math.max(maxY - minY, 1);\n\n    const viewBox = [minX, -maxY, viewBoxWidth, viewBoxHeight];\n\n    const width = viewBoxWidth * DRAW_UNITS_TO_USER_UNITS;\n    const height = viewBoxHeight * DRAW_UNITS_TO_USER_UNITS;\n\n    return (\n        <div>\n            <svg width={width} height={height} viewBox={`${viewBox.join(' ')}`}>\n                <g transform='scale(1,-1)'>\n                    {objects.map((path, index) => {\n                        const {tag: Tag, ...objectData} = path;\n                        return <Tag {...objectData} key={index}/>\n                    })}\n                </g>\n            </svg>\n        </div>\n    );\n}\n\nexport default DrawComponent;","function selectPalette(sprite) {\n    const {\n        bitsPerPixel,\n        palette = [],\n        wimpPalette\n    } = sprite;\n    return (palette.length === (1 << bitsPerPixel)) ? palette : wimpPalette;\n}\n\nfunction mapSprite(sprite) {\n    const {\n        pixelWidth: width,\n        pixelHeight: height,\n        image,\n        mask = [],\n    } = sprite;\n    const palette = selectPalette(sprite);\n    const pixels = [];\n    for (let n = 0; n < image.length; n++) {\n        const {first: bgr_} = palette[image[n]];\n        const alpha = (mask[n] === 0) ? 0 : 0xFF;\n        pixels.push((bgr_ >> 8) & 0xFF);\n        pixels.push((bgr_ >> 16) & 0xFF);\n        pixels.push((bgr_ >> 24) & 0xFF);\n        pixels.push(alpha);\n    }\n    return {\n        width,\n        height,\n        pixels\n    }\n}\nexport default mapSprite;","import CRC32 from 'crc-32';\nimport pako from 'pako';\n\nconst FILE_HEADER = [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A];\n\nconst FILE_HEADER_SIZE = 8;\nconst LENGTH_SIZE = 4;\nconst TYPE_SIZE = 4;\nconst CRC32_SIZE = 4;\n\nconst CONTROL_STRUCTURE_SIZE = LENGTH_SIZE + TYPE_SIZE + CRC32_SIZE;\n\nconst IHDR_LENGTH = 13;\nconst IEND_LENGTH = 0;\n\nconst FILTER_TYPE_NONE = 0;\n\nconst COLOR_TYPE_RGBA = 6;\n\nfunction createPngImage(q) {\n\n    const {\n        width,\n        height,\n        imageData,\n        bitDepth,\n        colorType,\n        compressionMethod = 0,\n        filterMethod = 0,\n        interlaceMethod = 0\n    } = q;\n\n    const idatLength = imageData.length;\n    const size =\n        FILE_HEADER_SIZE +\n        (CONTROL_STRUCTURE_SIZE + IHDR_LENGTH) +\n        (CONTROL_STRUCTURE_SIZE + idatLength) +\n        (CONTROL_STRUCTURE_SIZE + IEND_LENGTH);\n\n    const pngArray = new Uint8Array(size);\n    const pngView = new DataView(pngArray.buffer);\n    let offset = 0;\n\n    function set(data) {\n        pngArray.set(data, offset);\n        offset += data.length;\n        return offset;\n    }\n\n    function setUint32(value) {\n        pngView.setUint32(offset, value);\n        offset += 4;\n        return offset;\n    }\n\n    function setInt32(value) {\n        pngView.setInt32(offset, value);\n        offset += 4;\n        return offset;\n    }\n\n    function createCrcFrom(start) {\n        return CRC32.buf(pngArray.slice(start, offset));\n    }\n\n    function createBytes(type) {\n        return [...type].map(char => char.charCodeAt(0));\n    }\n\n    set(FILE_HEADER);\n\n    const ihdrStart = setUint32(IHDR_LENGTH);\n    set(createBytes('IHDR'));\n    setUint32(width);\n    setUint32(height);\n    set([\n        bitDepth,\n        colorType,\n        compressionMethod,\n        filterMethod,\n        interlaceMethod\n    ]);\n    setInt32(createCrcFrom(ihdrStart));\n\n    const idatStart = setUint32(idatLength);\n    set(createBytes('IDAT'));\n    set(imageData);\n    setInt32(createCrcFrom(idatStart));\n\n    const iendStart = setUint32(IEND_LENGTH);\n    set(createBytes('IEND'));\n    setInt32(createCrcFrom(iendStart));\n\n    return pngArray;\n}\n\nfunction filterImage({width, height, pixels}) {\n\n    const filteredSize = height * (1 + 4 * width);\n\n    const filteredArray = new Uint8Array(filteredSize);\n    const filteredView = new DataView(filteredArray.buffer);\n    let destOffset = 0;\n\n    function setUint8(value) {\n        filteredView.setUint8(destOffset++, value);\n    }\n\n    for (let y = 0, srcOffset = 0; y < height; y++) {\n        setUint8(FILTER_TYPE_NONE);\n        for (let x = 0; x < width; x++) {\n            setUint8(pixels[srcOffset++]);\n            setUint8(pixels[srcOffset++]);\n            setUint8(pixels[srcOffset++]);\n            setUint8(pixels[srcOffset++]);\n        }\n    }\n\n    return filteredArray;\n}\n\nfunction mapRgbaImage({width, height, pixels}) {\n    const filtered = filterImage({width, height, pixels});\n    return createPngImage({\n        width,\n        height,\n        imageData: pako.deflate(filtered),\n        bitDepth: 8,\n        colorType: COLOR_TYPE_RGBA\n    });\n}\n\nexport default mapRgbaImage;","import {Sprite} from 'riscos-sprite';\n\nimport {\n    CAP_BUTT,\n    CAP_ROUND,\n    CAP_SQUARE,\n    CAP_TRIANGLE,\n    Draw,\n    JOIN_BEVEL,\n    JOIN_MITRE,\n    JOIN_ROUND,\n    TAG_BEZIER,\n    TAG_CLOSE_SUB_PATH,\n    TAG_DRAW,\n    TAG_END,\n    TAG_MOVE,\n    TYPE_PATH,\n    TYPE_SPRITE,\n    TYPE_SPRITE_ROTATED,\n    WINDING_EVEN_ODD\n} from 'riscos-draw';\nimport mapSprite from \"./sprite\";\nimport mapRgbaImage from \"./rgba-image\";\nimport {Base64} from \"js-base64\";\n\nconst DRAW_UNITS_PER_INCH = 180 * 256;\n\nconst FIXED_POINT_CONVERSION_FACTOR = 65536.0;\n\nconst MIN_STROKE_WIDTH = 160;\n\nconst TAG_MAP = {\n    [TAG_END]: '',\n    [TAG_MOVE]: 'M',\n    [TAG_CLOSE_SUB_PATH]: 'Z',\n    [TAG_BEZIER]: 'C',\n    [TAG_DRAW]: 'L'\n};\n\nconst JOIN_MAP = {\n    [JOIN_MITRE]: 'mitre',\n    [JOIN_ROUND]: 'round',\n    [JOIN_BEVEL]: 'bevel'\n};\n\nconst CAP_MAP = {\n    [CAP_BUTT]: 'butt',\n    [CAP_ROUND]: 'round',\n    [CAP_SQUARE]: 'square',\n    [CAP_TRIANGLE]: 'triangle'\n};\n\nfunction mapTransform(transform) {\n    return [\n        ...transform.slice(0, 4).map(x => x / FIXED_POINT_CONVERSION_FACTOR),\n        ...transform.slice(4)\n    ];\n}\n\nfunction mapPathData(elements) {\n    const path = [];\n    for (const {tag, points = []} of elements) {\n        path.push(TAG_MAP[tag]);\n        path.push(points.flatMap(({x, y}) => [x, y]).join(' '));\n    }\n    return path.join(' ');\n}\n\nfunction mapColour(colour) {\n    if (colour === 0xFFFFFFFF) {\n        return 'none';\n    }\n    const elements = [\n        (colour >> 8) & 0xFF,\n        (colour >> 16) & 0xFF,\n        (colour >> 24) & 0xFF,\n    ];\n    return `rgb(${elements})`;\n}\n\nfunction mapPathObject(pathObject) {\n    const {\n        fillColour,\n        outlineColour,\n        outlineWidth,\n        pathStyle: {\n            join,\n            capStart,\n            windingRule,\n            dash\n        },\n        path\n    } = pathObject;\n    const {\n        offset: strokeDashoffset,\n        array: strokeDasharray\n    } = dash || {};\n    return {\n        tag: 'path',\n        d: mapPathData(path),\n        fill: mapColour(fillColour),\n        stroke: mapColour(outlineColour),\n        strokeWidth: Math.max(MIN_STROKE_WIDTH, outlineWidth),\n        ...(join !== JOIN_MITRE && {strokeLinejoin: JOIN_MAP[join]}),\n        ...(capStart in [CAP_SQUARE, CAP_ROUND] && {strokeLinecap: CAP_MAP[capStart]}),\n        ...(windingRule === WINDING_EVEN_ODD && {fillRule: 'evenodd'}),\n        ...(strokeDashoffset && {strokeDashoffset}),\n        ...(strokeDasharray && {strokeDasharray})\n    };\n}\n\nfunction mapSpriteObject(boundingBox, spriteObject, array) {\n    const {\n        start,\n        end\n    } = spriteObject;\n    const slice = array.slice(start, end)\n    const sprite = Sprite.fromUint8Array(slice);\n    const {minX, maxX, minY, maxY} = boundingBox;\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const rgbaImage = mapSprite(sprite);\n    const png = mapRgbaImage(rgbaImage);\n    const data = Base64.fromUint8Array(png);\n    return {\n        tag: 'image',\n        x: 0,\n        y: 0,\n        width,\n        height,\n        preserveAspectRatio: 'none',\n        xlinkHref: `data:image/png;base64,${data}`,\n        transform: `translate(${minX}, ${minY}) translate(0, ${height}) scale(1, -1)`\n    };\n}\n\nfunction mapSpriteRotatedObject(spriteObject, array) {\n    const {\n        transform: drawTransform,\n        start,\n        end\n    } = spriteObject;\n    const slice = array.slice(start, end)\n    const sprite = Sprite.fromUint8Array(slice);\n    const {\n        pixelWidth,\n        pixelHeight,\n        xDpi = 90,\n        yDpi = 90\n    } = sprite;\n    const width = pixelWidth * DRAW_UNITS_PER_INCH / xDpi;\n    const height = pixelHeight * DRAW_UNITS_PER_INCH / yDpi\n    const rgbaImage = mapSprite(sprite);\n    const png = mapRgbaImage(rgbaImage);\n    const data = Base64.fromUint8Array(png);\n    const transform = mapTransform(drawTransform);\n    return {\n        tag: 'image',\n        x: 0,\n        y: 0,\n        width,\n        height,\n        preserveAspectRatio: 'none',\n        xlinkHref: `data:image/png;base64,${data}`,\n        transform: `matrix(${transform}) translate(0, ${height}) scale(1, -1)`\n    };\n}\n\nfunction mapDrawFile(array) {\n\n    const {\n        header: {\n            boundingBox: fileBoundingBox\n        },\n        objects\n    } = Draw.fromUint8Array(array);\n\n    function mergeBoundingBox(other) {\n        if (!other) {\n            return;\n        }\n\n        const {minX, maxX, minY, maxY} = other;\n\n        if ((minX > maxX) || (minY > maxY)) {\n            return;\n        }\n\n        fileBoundingBox.minX = Math.min(fileBoundingBox.minX, minX);\n        fileBoundingBox.maxX = Math.max(fileBoundingBox.maxX, maxX);\n        fileBoundingBox.minY = Math.min(fileBoundingBox.minY, minY);\n        fileBoundingBox.maxY = Math.max(fileBoundingBox.maxY, maxY);\n    }\n\n    const mappedObjects = [];\n    for (const {type, boundingBox, ...data} of objects) {\n        mergeBoundingBox(boundingBox);\n        switch (type) {\n            case TYPE_PATH: {\n                mappedObjects.push(mapPathObject(data));\n                break;\n            }\n            case TYPE_SPRITE: {\n                mappedObjects.push(mapSpriteObject(boundingBox, data, array));\n                break;\n            }\n            case TYPE_SPRITE_ROTATED: {\n                mappedObjects.push(mapSpriteRotatedObject(data, array));\n                break;\n            }\n            default:\n                break;\n        }\n    }\n\n    return {\n        boundingBox: fileBoundingBox,\n        objects: mappedObjects\n    };\n}\n\nexport default mapDrawFile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// For Safari:\n// https://gist.github.com/hanayashiki/8dac237671343e7f0b15de617b0051bd\n(function () {\n  File.prototype.arrayBuffer = File.prototype.arrayBuffer || myArrayBuffer;\n  Blob.prototype.arrayBuffer = Blob.prototype.arrayBuffer || myArrayBuffer;\n\n  function myArrayBuffer() {\n    // this: File or Blob\n    return new Promise((resolve) => {\n      let fr = new FileReader();\n      fr.onload = () => {\n        resolve(fr.result);\n      };\n      fr.readAsArrayBuffer(this);\n    })\n  }\n})();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}